// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOWDATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  password   String    @db.VarChar(15)
  first_name String    @db.VarChar(30)
  last_name  String    @db.VarChar(30)
  email      String    @unique
  avatar     String
  comments   Comment[]
  posts      Post[]
  archive    Archive?  @relation(fields: [archiveId], references: [id])
  archiveId  Int?
}

model Comment {
  id      Int    @id @default(autoincrement())
  content String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int
  post    Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId  Int

  @@map("comments")
}

model Post {
  id           Int         @id @default(autoincrement())
  date         DateTime    @db.Date
  text_content String      @default("")
  picture      String
  likes        Int         @default(0)
  address      String?     @db.VarChar(50)
  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  comments     Comment[]
  posttotags   PostToTag[]
  postToTagId  Int?
  archives     Archive[]

  @@map("posts")
}

model PostToTag {
  id     Int  @id @default(autoincrement())
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
  tag    Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId  Int
}

model Tag {
  id         Int         @id @default(autoincrement())
  type       String
  postToTags PostToTag[]
}

model Archive {
  id     Int    @id @default(autoincrement())
  userId Int
  user   User[]
  posts  Post[] @relation(fields: [postId], references: [id])
  postId Int?
}
